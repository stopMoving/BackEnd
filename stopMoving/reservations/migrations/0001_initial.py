# Generated by Django 5.2.4 on 2025-08-15 08:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookinfo', '0001_initial'),
        ('library', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LibraryBookStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_count', models.IntegerField()),
                ('available_count', models.IntegerField()),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookinfo.bookinfo')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.library')),
            ],
        ),
        migrations.CreateModel(
            name='BookReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('reserved_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', '예약중'), ('expired', '만료'), ('picked_up', '대출완료'), ('cancelled', '취소')], db_index=True, default='active', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservations.librarybookstock')),
            ],
        ),
        migrations.AddIndex(
            model_name='librarybookstock',
            index=models.Index(fields=['library', 'isbn'], name='reservation_library_6d6226_idx'),
        ),
        migrations.AddConstraint(
            model_name='librarybookstock',
            constraint=models.UniqueConstraint(fields=('library', 'isbn'), name='uniq_library_book'),
        ),
        migrations.AddConstraint(
            model_name='librarybookstock',
            constraint=models.CheckConstraint(condition=models.Q(('total_count__gte', 0)), name='chk_total_nonneg'),
        ),
        migrations.AddConstraint(
            model_name='librarybookstock',
            constraint=models.CheckConstraint(condition=models.Q(('available_count__gte', 0)), name='chk_available_nonneg'),
        ),
        migrations.AddConstraint(
            model_name='librarybookstock',
            constraint=models.CheckConstraint(condition=models.Q(('available_count__lte', models.F('total_count'))), name='chk_available_le_total'),
        ),
        migrations.AddIndex(
            model_name='bookreservation',
            index=models.Index(fields=['status', 'expires_at'], name='reservation_status_acb574_idx'),
        ),
        migrations.AddIndex(
            model_name='bookreservation',
            index=models.Index(fields=['user', 'status'], name='reservation_user_id_552ad9_idx'),
        ),
        migrations.AddConstraint(
            model_name='bookreservation',
            constraint=models.CheckConstraint(condition=models.Q(('quantity__gte', 1)), name='chk_quantity_ge_1'),
        ),
    ]
